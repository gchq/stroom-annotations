/*
 * This file is generated by jOOQ.
*/
package stroom.db.annotations.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;

import stroom.db.annotations.Annotations;
import stroom.db.annotations.Keys;
import stroom.db.annotations.tables.records.AnnotationsHistoryRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AnnotationsHistory extends TableImpl<AnnotationsHistoryRecord> {

    private static final long serialVersionUID = 37096253;

    /**
     * The reference instance of <code>annotations.annotations_history</code>
     */
    public static final AnnotationsHistory ANNOTATIONS_HISTORY = new AnnotationsHistory();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AnnotationsHistoryRecord> getRecordType() {
        return AnnotationsHistoryRecord.class;
    }

    /**
     * The column <code>annotations.annotations_history.id</code>.
     */
    public final TableField<AnnotationsHistoryRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>annotations.annotations_history.operation</code>.
     */
    public final TableField<AnnotationsHistoryRecord, String> OPERATION = createField("operation", org.jooq.impl.SQLDataType.VARCHAR.length(127).nullable(false), this, "");

    /**
     * The column <code>annotations.annotations_history.annotationId</code>.
     */
    public final TableField<AnnotationsHistoryRecord, String> ANNOTATIONID = createField("annotationId", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>annotations.annotations_history.status</code>.
     */
    public final TableField<AnnotationsHistoryRecord, String> STATUS = createField("status", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>annotations.annotations_history.assignTo</code>.
     */
    public final TableField<AnnotationsHistoryRecord, String> ASSIGNTO = createField("assignTo", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>annotations.annotations_history.content</code>.
     */
    public final TableField<AnnotationsHistoryRecord, String> CONTENT = createField("content", org.jooq.impl.SQLDataType.VARCHAR.length(8092), this, "");

    /**
     * The column <code>annotations.annotations_history.updatedBy</code>.
     */
    public final TableField<AnnotationsHistoryRecord, String> UPDATEDBY = createField("updatedBy", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>annotations.annotations_history.lastUpdated</code>.
     */
    public final TableField<AnnotationsHistoryRecord, ULong> LASTUPDATED = createField("lastUpdated", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * Create a <code>annotations.annotations_history</code> table reference
     */
    public AnnotationsHistory() {
        this("annotations_history", null);
    }

    /**
     * Create an aliased <code>annotations.annotations_history</code> table reference
     */
    public AnnotationsHistory(String alias) {
        this(alias, ANNOTATIONS_HISTORY);
    }

    private AnnotationsHistory(String alias, Table<AnnotationsHistoryRecord> aliased) {
        this(alias, aliased, null);
    }

    private AnnotationsHistory(String alias, Table<AnnotationsHistoryRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Annotations.ANNOTATIONS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<AnnotationsHistoryRecord, Integer> getIdentity() {
        return Keys.IDENTITY_ANNOTATIONS_HISTORY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<AnnotationsHistoryRecord> getPrimaryKey() {
        return Keys.KEY_ANNOTATIONS_HISTORY_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<AnnotationsHistoryRecord>> getKeys() {
        return Arrays.<UniqueKey<AnnotationsHistoryRecord>>asList(Keys.KEY_ANNOTATIONS_HISTORY_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AnnotationsHistory as(String alias) {
        return new AnnotationsHistory(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public AnnotationsHistory rename(String name) {
        return new AnnotationsHistory(name, null);
    }
}
